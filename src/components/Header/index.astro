---
// Sticky navigation header component
import { Menu, Home, Briefcase, GraduationCap, Code, MessageCircle, FileText } from '@lucide/astro'

const NAV_LINKS = [
    { name: 'Home', href: '#home', icon: Home },
    { name: 'Experience', href: '#experience', icon: Briefcase },
    { name: 'Education', href: '#education', icon: GraduationCap },
    { name: 'Skills', href: '#tech-stack', icon: Code },
    { name: 'Contact', href: '#contact', icon: MessageCircle }
]
---

<header
    class='fixed top-0 right-0 left-0 z-50 border-b border-gray-700/50 bg-gray-900/95 backdrop-blur-md'
    role='banner'
>
    <nav
        class='max-w-8xl mx-auto px-4 sm:px-6 lg:px-8'
        role='navigation'
        aria-label='Main navigation'
    >
        <div class='flex h-16 items-center justify-between'>
            <!-- Logo/Brand -->
            <div class='flex items-center'>
                <a
                    href='#home'
                    class='flex items-center space-x-2.5 text-white transition-colors duration-200 hover:text-cyan-400'
                >
                    <div
                        class='flex h-8 w-8 items-center justify-center rounded-full bg-gradient-to-r from-cyan-500 to-blue-500'
                    >
                        <Code class='h-4 w-4 text-white' />
                    </div>
                    <span class='text-lg font-semibold'>Andrey Lapchik</span>
                </a>
            </div>

            <!-- Desktop Navigation -->
            <div class='hidden items-center space-x-8 lg:flex'>
                {
                    NAV_LINKS.map((link) => (
                        <a
                            href={link.href}
                            class='nav-link flex items-center space-x-1 text-gray-300 transition-colors duration-200 hover:text-cyan-400'
                        >
                            <link.icon class='h-4 w-4' />
                            <span>{link.name}</span>
                        </a>
                    ))
                }

                <a
                    href='/CV.pdf'
                    target='_blank'
                    class='flex items-center space-x-1 rounded-lg bg-gradient-to-r from-cyan-600 to-blue-600 px-4 py-2 text-sm font-medium text-white transition-all duration-200 hover:scale-105 hover:from-cyan-700 hover:to-blue-700 hover:shadow-lg hover:shadow-cyan-500/25'
                >
                    <FileText class='h-4 w-4' />
                    <span>View CV</span>
                </a>
            </div>

            <!-- Mobile menu button -->
            <div class='lg:hidden'>
                <button
                    id='mobile-menu-button'
                    class='text-gray-300 transition-colors duration-200 hover:text-cyan-400'
                    aria-label='Toggle mobile menu'
                    aria-expanded='false'
                    aria-controls='mobile-menu'
                >
                    <Menu class='h-6 w-6' />
                </button>
            </div>
        </div>

        <!-- Mobile Navigation -->
        <div id='mobile-menu' class='hidden border-t border-gray-700/50 lg:hidden'>
            <div class='space-y-1 px-2 pt-2 pb-3'>
                {
                    NAV_LINKS.map((link) => (
                        <a
                            href={link.href}
                            class='mobile-nav-link block rounded-md px-3 py-2 text-gray-300 transition-colors duration-200 hover:bg-gray-800/50 hover:text-cyan-400'
                        >
                            <div class='flex items-center space-x-2'>
                                <link.icon class='h-4 w-4' />
                                <span>{link.name}</span>
                            </div>
                        </a>
                    ))
                }

                <a
                    href='/CV.pdf'
                    target='_blank'
                    class='mobile-nav-link block rounded-md px-3 py-2 text-gray-300 transition-colors duration-200 hover:bg-gray-800/50 hover:text-cyan-400'
                >
                    <div class='flex items-center space-x-2'>
                        <FileText class='h-4 w-4' />
                        <span>View CV</span>
                    </div>
                </a>
            </div>
        </div>
    </nav>
</header>

<script>
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button')
    const mobileMenu = document.getElementById('mobile-menu')
    const menuIcon = mobileMenuButton?.querySelector('svg')

    mobileMenuButton?.addEventListener('click', () => {
        mobileMenu?.classList.toggle('hidden')

        // Toggle menu icon
        if (menuIcon) {
            if (mobileMenu?.classList.contains('hidden')) {
                menuIcon.innerHTML =
                    '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>'
            } else {
                menuIcon.innerHTML =
                    '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>'
            }
        }
    })

    // Close mobile menu when clicking on a link
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link')

    mobileNavLinks.forEach((link) => {
        link.addEventListener('click', () => {
            mobileMenu?.classList.add('hidden')
            if (menuIcon) {
                menuIcon.innerHTML =
                    '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>'
            }
        })
    })

    // Smooth scrolling for navigation links
    const navLinks = document.querySelectorAll('.nav-link, .mobile-nav-link')

    navLinks.forEach((link) => {
        link.addEventListener('click', (e) => {
            e.preventDefault()
            const targetId = link.getAttribute('href')?.substring(1)
            const targetElement = document.getElementById(targetId || '')

            if (targetElement) {
                const headerHeight = 64 // Height of the sticky header
                const targetPosition = targetElement.offsetTop - headerHeight

                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                })
            }
        })
    })

    // Active link highlighting
    const sections = document.querySelectorAll('section[id]')
    const navLinkElements = document.querySelectorAll('.nav-link, .mobile-nav-link')

    const highlightActiveLink = () => {
        const scrollPosition = window.scrollY + 100

        sections.forEach((section) => {
            const sectionTop = (section as HTMLElement).offsetTop
            const sectionHeight = (section as HTMLElement).offsetHeight
            const sectionId = section.getAttribute('id')

            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                navLinkElements.forEach((link) => {
                    link.classList.remove('text-cyan-400')
                    link.classList.add('text-gray-300')

                    // Map sections to navigation items
                    const linkHref = link.getAttribute('href')
                    let shouldHighlight = false

                    if (linkHref === `#${sectionId}`) {
                        // Direct match
                        shouldHighlight = true
                    } else if (sectionId === 'testimonials' && linkHref === '#contact') {
                        // Testimonials section highlights Contact nav item
                        shouldHighlight = true
                    } else if (sectionId === 'achievements' && linkHref === '#tech-stack') {
                        // Achievements section highlights Skills nav item
                        shouldHighlight = true
                    }

                    if (shouldHighlight) {
                        link.classList.remove('text-gray-300')
                        link.classList.add('text-cyan-400')
                    }
                })
            }
        })
    }

    window.addEventListener('scroll', highlightActiveLink)
    highlightActiveLink() // Initial call
</script>
