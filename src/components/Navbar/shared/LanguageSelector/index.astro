---
import type { Locale } from 'types'

const options = [
    { flag: './gb.svg', href: './', language: 'English' },
    { flag: './ru.svg', href: './ru', language: 'Русский' },
    { flag: './lv.svg', href: './lv', language: 'Latviešu' }
]

const locale = Astro.currentLocale as Locale
---

<div id='language-selector'>
    <div class='flex cursor-pointer items-center gap-1'>
        <i data-lucide='earth' class='h-7 w-7 text-zinc-800 dark:text-white'></i>

        <h2 class='w-5 text-base font-semibold dark:text-white'>
            {locale.toUpperCase()}
        </h2>
        <i
            data-lucide='chevron-down'
            class='h-5 w-5 -ml-0.5 transition-transform dark:text-white'
            id='language-arrow'></i>
    </div>

    <div
        class='absolute right-10 top-20 rounded-md bg-zinc-200 py-4 dark:bg-[#2A2A67] md:right-16 md:top-16 hidden'
        id='options'
    >
        {
            options.map(({ flag, language, href }) => (
                <a
                    href={href}
                    class='my-1 flex cursor-pointer items-center gap-3 px-10 transition hover:bg-zinc-400 hover:bg-opacity-80 dark:hover:bg-[#05CEC2]'
                >
                    <img src={flag} class='w-6 rounded-[3px] aspect-auto' />
                    <h2 class='text-lg font-semibold text-zinc-800 dark:text-white'>{language}</h2>
                </a>
            ))
        }
    </div>
</div>

<script>
    const languageSelector = document.getElementById('language-selector')!
    const arrow = document.getElementById('language-arrow')!
    const options = document.getElementById('options')!

    const toggleLanguageSelector = () => {
        arrow.classList.toggle('rotate-180')
        options.classList.toggle('hidden')
    }

    const hideLanguageSelector = (e: MouseEvent) => {
        if (!options.contains(e.target as Node)) {
            toggleLanguageSelector()
            document.removeEventListener('mousedown', hideLanguageSelector)
        }
    }

    languageSelector.addEventListener('mousedown', (e) => {
        e.stopPropagation()

        if (options.classList.contains('hidden')) {
            toggleLanguageSelector()
            document.addEventListener('mousedown', hideLanguageSelector)
        } else if (!options.contains(e.target as Node)) {
            toggleLanguageSelector()
            document.removeEventListener('mousedown', hideLanguageSelector)
        }
    })
</script>
